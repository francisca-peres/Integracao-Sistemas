//------------------------------------------------------------------------------
// <auto-generated>
//     Esse código foi gerado por uma ferramenta.
//
//     As alterações no arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinanceiroServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DadosFinanceiros", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class DadosFinanceiros : object
    {
        
        private string Codigo_PecaField;
        
        private decimal Custo_ProducaoField;
        
        private decimal LucroField;
        
        private decimal PrejuizoField;
        
        private decimal Tempo_ProducaoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Codigo_Peca
        {
            get
            {
                return this.Codigo_PecaField;
            }
            set
            {
                this.Codigo_PecaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Custo_Producao
        {
            get
            {
                return this.Custo_ProducaoField;
            }
            set
            {
                this.Custo_ProducaoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lucro
        {
            get
            {
                return this.LucroField;
            }
            set
            {
                this.LucroField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Prejuizo
        {
            get
            {
                return this.PrejuizoField;
            }
            set
            {
                this.PrejuizoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Tempo_Producao
        {
            get
            {
                return this.Tempo_ProducaoField;
            }
            set
            {
                this.Tempo_ProducaoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FinanceiroServiceReference.IFinanceiroService")]
    public interface IFinanceiroService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceiroService/PecaComMaiorPrejuizo", ReplyAction="http://tempuri.org/IFinanceiroService/PecaComMaiorPrejuizoResponse")]
        System.Threading.Tasks.Task<string> PecaComMaiorPrejuizoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceiroService/ObterCustosTotaisProducao", ReplyAction="http://tempuri.org/IFinanceiroService/ObterCustosTotaisProducaoResponse")]
        System.Threading.Tasks.Task<decimal> ObterCustosTotaisProducaoAsync(System.DateTime dataInicio, System.DateTime dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceiroService/ObterLucroTotal", ReplyAction="http://tempuri.org/IFinanceiroService/ObterLucroTotalResponse")]
        System.Threading.Tasks.Task<decimal> ObterLucroTotalAsync(System.DateTime dataInicio, System.DateTime dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceiroService/ObterPrejuizoTotalPorPeca", ReplyAction="http://tempuri.org/IFinanceiroService/ObterPrejuizoTotalPorPecaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> ObterPrejuizoTotalPorPecaAsync(System.DateTime dataInicio, System.DateTime dataFim);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFinanceiroService/ObterDadosFinanceirosPorPeca", ReplyAction="http://tempuri.org/IFinanceiroService/ObterDadosFinanceirosPorPecaResponse")]
        System.Threading.Tasks.Task<FinanceiroServiceReference.DadosFinanceiros> ObterDadosFinanceirosPorPecaAsync(string codigoPeca);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IFinanceiroServiceChannel : FinanceiroServiceReference.IFinanceiroService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class FinanceiroServiceClient : System.ServiceModel.ClientBase<FinanceiroServiceReference.IFinanceiroService>, FinanceiroServiceReference.IFinanceiroService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar o ponto de extremidade de serviço.
        /// </summary>
        /// <param name="serviceEndpoint">O ponto de extremidade a ser configurado</param>
        /// <param name="clientCredentials">As credenciais do cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public FinanceiroServiceClient() : 
                base(FinanceiroServiceClient.GetDefaultBinding(), FinanceiroServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IFinanceiroService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FinanceiroServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(FinanceiroServiceClient.GetBindingForEndpoint(endpointConfiguration), FinanceiroServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FinanceiroServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(FinanceiroServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FinanceiroServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(FinanceiroServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public FinanceiroServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> PecaComMaiorPrejuizoAsync()
        {
            return base.Channel.PecaComMaiorPrejuizoAsync();
        }
        
        public System.Threading.Tasks.Task<decimal> ObterCustosTotaisProducaoAsync(System.DateTime dataInicio, System.DateTime dataFim)
        {
            return base.Channel.ObterCustosTotaisProducaoAsync(dataInicio, dataFim);
        }
        
        public System.Threading.Tasks.Task<decimal> ObterLucroTotalAsync(System.DateTime dataInicio, System.DateTime dataFim)
        {
            return base.Channel.ObterLucroTotalAsync(dataInicio, dataFim);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, decimal>> ObterPrejuizoTotalPorPecaAsync(System.DateTime dataInicio, System.DateTime dataFim)
        {
            return base.Channel.ObterPrejuizoTotalPorPecaAsync(dataInicio, dataFim);
        }
        
        public System.Threading.Tasks.Task<FinanceiroServiceReference.DadosFinanceiros> ObterDadosFinanceirosPorPecaAsync(string codigoPeca)
        {
            return base.Channel.ObterDadosFinanceirosPorPecaAsync(codigoPeca);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFinanceiroService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IFinanceiroService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:14998/FinanceiroService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Não foi possível encontrar o ponto de extremidade com o nome \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return FinanceiroServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IFinanceiroService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return FinanceiroServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IFinanceiroService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IFinanceiroService,
        }
    }
}
